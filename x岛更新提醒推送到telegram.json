{
  "name": "x岛更新提醒",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.nmb.best/api/thread/id/62750274/",
        "options": {}
      },
      "id": "29ef6738-910f-4ced-9b75-7d685b0bde1b",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -40,
        540
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nconst output = [];\nfor (const item of $input.all()) {\n  // Check if 'Replies' field exists and is an array\n  if (item.json.Replies && Array.isArray(item.json.Replies)) {\n    const lastReply = item.json.Replies[item.json.Replies.length - 1];\n    item.json.firstLastReply = lastReply;\n    output.push(item);\n    }\n    }\n\nreturn output;\n"
      },
      "id": "2306ecfb-22c0-40fa-91ce-56ed1369b803",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        480
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 10
            }
          ]
        }
      },
      "id": "8da98c44-4731-415a-94f0-eee07c73f077",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -260,
        540
      ]
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "id": "3292de62-0431-4a1b-9a23-04757017a944",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        400,
        640
      ],
      "webhookId": "ddb690b5-0c51-4083-8e3d-341f22422431"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nconst output = [];\nfor (const item of $input.all()) {\n  // Check if 'Replies' field exists and is an array\n  if (item.json.Replies && Array.isArray(item.json.Replies)) {\n    const lastReply = item.json.Replies[item.json.Replies.length - 1];\n    item.json.secondLastReply = lastReply;\n    output.push(item);\n    }\n    }\n\nreturn output;\n"
      },
      "id": "e396478e-9b51-46ab-a2a6-d8950b9cf017",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d8b64ed7-f01c-457f-9bda-3c108cb3fa18",
              "leftValue": "={{ $json.firstLastReply.id }}",
              "rightValue": "={{ $json.secondLastReply.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "642ca7f9-5e06-4b38-a414-8c31c036225f",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1240,
        520
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "a9d92705-4886-4ae5-a547-8b80a695794c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1060,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// 遍历所有输入项，并对每个项的 ReplyCount 字段执行计算\nfor (const item of $input.all()) {\n  // 检查 item.json 和 item.json.ReplyCount 是否存在\n  if (item.json && item.json.ReplyCount !== undefined) {\n    // 计算并添加新的字段 adjustedReplyCount\n    item.json.adjustedReplyCount = Math.floor(item.json.ReplyCount / 19) + 1;\n  }\n}\n\n// 返回修改后的输入项数组\nreturn $input.all();\n"
      },
      "id": "cd6543ca-022c-45aa-830e-6222bb3e888f",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        540
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.nmb.best/api/thread/id/62750274/page/{{ $json.adjustedReplyCount }}",
        "options": {}
      },
      "id": "fd737831-0302-4f13-bbc3-3a73aea21e3b",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.nmb.best/api/thread/id/62750274/page/{{ $json.adjustedReplyCount }}",
        "options": {}
      },
      "id": "78e427d0-0cea-4a5a-bc59-b9fb24203c6c",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        620,
        640
      ]
    },
    {
      "parameters": {
        "chatId": "",
        "text": "=<a href=\"https://www.nmbxd1.com/t/{{ $json.id }}?r={{ $json.secondLastReply.id }}\">No.{{ $json.id }}</a>串有最新回复了\n\n饼干：{{ $json.secondLastReply.user_hash }}  标题：{{ $json.secondLastReply.title }}  昵称：{{ $json.secondLastReply.name }}\n内容：\n{{ $json.secondLastReply.content }}\n\n回复时间：<code>{{ $json.secondLastReply.now }}</code>\n",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": false,
          "disable_web_page_preview": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d4ebbcd9-0082-4342-8913-a2e8621f4735",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1820,
        600
      ],
      "credentials": {
        "telegramApi": {
          "id": "90qCUOfiyn5RGFyP",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// 检查是否存在<br />并移除它\nif ($input.item.json.secondLastReply.content.includes('<br />')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/<br \\/>/g, '');\n}\n\n// 检查是否存在<small>并移除它\nif ($input.item.json.secondLastReply.content.includes('<small>')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/<small>/g, '');\n}\n\n// 检查是否存在</small>并移除它\nif ($input.item.json.secondLastReply.content.includes('</small>')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/<\\/small>/g, '');\n}\n\n// 检查是否存在[h]并替换为<tg-spoiler>\nif ($input.item.json.secondLastReply.content.includes('[h]')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/\\[h\\]/g, '<tg-spoiler>');\n}\n\n// 检查是否存在[/h]并替换为</tg-spoiler>\nif ($input.item.json.secondLastReply.content.includes('[/h]')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/\\[\\/h\\]/g, '</tg-spoiler>');\n}\n\n// 检查是否存在<font color=\"#789922\">&gt;&gt;</font>并替换为>>\nif ($input.item.json.secondLastReply.content.includes('<font color=\"#789922\">&gt;&gt;')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/<font color=\"#789922\">&gt;&gt;/g, '>>');\n}\n\n// 检查是否存在</font>并移除它\nif ($input.item.json.secondLastReply.content.includes('</font>')) {\n  $input.item.json.secondLastReply.content =$input.item.json.secondLastReply.content.replace(/<\\/font>/g, '');\n}\n\nreturn $input.item;\n"
      },
      "id": "c3c4c03f-9ca2-40d1-a1de-9bd02ed78aae",
      "name": "修复回复内容",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        520
      ],
      "executeOnce": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "94d1c831-69cd-4288-a69f-7be101d4c2e4",
              "leftValue": "={{ $json.secondLastReply.img }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "64065979-37b3-4f4a-8f46-1a02314afeff",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1620,
        520
      ]
    },
    {
      "parameters": {
        "operation": "sendMediaGroup",
        "chatId": "",
        "media": {
          "media": [
            {
              "media": "=https://image.nmb.best/image/{{ $json.secondLastReply.img }}{{ $json.secondLastReply.ext }}",
              "additionalFields": {
                "caption": "=<a href=\"https://www.nmbxd1.com/t/{{ $json.id }}?r={{ $json.secondLastReply.id }}\">No.{{ $json.id }}</a>串有最新回复了\n\n饼干：{{ $json.secondLastReply.user_hash }}  标题：{{ $json.secondLastReply.title }}  昵称：{{ $json.secondLastReply.name }}\n内容：\n{{ $json.secondLastReply.content }}\n\n回复时间：<code>{{ $json.secondLastReply.now }}</code>\n",
                "parse_mode": "HTML"
              }
            }
          ]
        },
        "additionalFields": {
          "disable_notification": false
        }
      },
      "id": "1cba22c1-1241-4d6a-93b9-e5a56d6afbfe",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1820,
        440
      ],
      "credentials": {
        "telegramApi": {
          "id": "90qCUOfiyn5RGFyP",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "修复回复内容",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "修复回复内容": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1a79a032-1d33-4925-84f7-9235f7c81de1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e7aaaa8c870be3f4e9635b0143bd190be7e08ab73ad622f6064ea6a5a0cc7796"
  },
  "id": "b66ZP7VjD1o28rHS",
  "tags": []
}
